---
import type { Page, PaginateFunction } from 'astro'
import { getCollection } from 'astro:content'
import { PAGE_SIZE } from '$/config'
import BaseLayout from '$/layouts/BaseLayout.astro'
import PostPreviewList from '$/components/elements/PostPreviewList.astro'
import Paginator from '$/components/elements/Paginator.astro'
import type { Frontmatter, Tag } from '$/types'
import TagIcon from '$/components/elements/TagIcon.astro'
import TagWithIcon from '$/components/elements/TagWithIcon.astro'

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction
}) {
  const collection = await getCollection('owned')
  const allTags = new Set<string>()
  collection.map((post) => {
    post.data.tag && allTags.add(post.data.tag)
  })

  return Array.from(allTags).flatMap((tag) => {
    const filteredPosts = collection.filter((post) => post.data.tag === tag)
    return paginate(filteredPosts, {
      params: { tag },
      pageSize: PAGE_SIZE,
    })
  })
}

type Props = {
  page: Page<Frontmatter>
  tag: Tag
}
const { page, tag } = Astro.props as Props
---

<BaseLayout
  content={{
    title: `Tag: ${tag}`,
    description: `タグ「${tag}」の記事一覧`,
  }}
>
  <TagWithIcon tag={tag} />
  <PostPreviewList posts={page.data} />
  <Paginator page={page} />
</BaseLayout>
