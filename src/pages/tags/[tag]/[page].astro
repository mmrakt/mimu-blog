---
export const prerender = true
import type {
  InferGetStaticParamsType,
  InferGetStaticPropsType,
  Page,
  PaginateFunction,
} from 'astro'
import { getCollection } from 'astro:content'
import { PAGE_SIZE } from '$/config'
import DefaultPageLayout from '$/layouts/default.astro'
import PostPreviewList from '$/components/elements/PostPreviewList.astro'
import Paginator from '$/components/elements/Paginator.astro'
import type { Frontmatter } from '$/types'
import type { Tag } from '$/content/config'

let title = 'Posts By Tags'
let description = 'All the articles posted so far...'

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction
}) {
  const collection = await getCollection('owned')
  const allTags = new Set<string>()
  collection.map((post) => {
    post.data.tagList && post.data.tagList.map((tag) => allTags.add(tag))
  })

  return Array.from(allTags).flatMap((tag) => {
    const filteredPosts = collection.filter((post) =>
      post.data.tagList.includes(tag)
    )
    return paginate(filteredPosts, {
      params: { tag },
      pageSize: PAGE_SIZE,
    })
  })
}

// type Params = InferGetStaticParamsType<typeof getStaticPaths>
// type Props = InferGetStaticPropsType<typeof getStaticPaths>

type Props = {
  page: Page<Frontmatter>
  tag: Tag
}
const { page, tag } = Astro.props as Props
// const { tag } = Astro.params as Params
---

<DefaultPageLayout
  content={{
    title: `Posts by Tag: ${tag}`,
    description: `all of the articles we have posted and linked so far under the tag: ${tag}`,
  }}
>
  <PostPreviewList posts={page.data} />
  <Paginator page={page} />
</DefaultPageLayout>
