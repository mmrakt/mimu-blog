---
import { getCollection } from 'astro:content'
import BaseLayout from '$/layouts/BaseLayout.astro'
import PostPreviewList from '$/components/elements/PostPreviewList.astro'
import type { Frontmatter, Tag } from '$/types'
import { fromCollectionToFrontmatters, sortPostsByPubDate } from '$/utils'
import TagIcon from '$/components/elements/TagIcon.astro'
import TagWithIcon from '$/components/elements/TagWithIcon.astro'

export async function getStaticPaths({}) {
  const collection = await getCollection('owned')
  const allTags = new Set()
  collection.map((entry) => {
    entry.data.tag && allTags.add(entry.data.tag)
  })

  return Array.from(allTags).map((tag) => {
    const filteredCollection = collection.filter(
      (entry) => entry.data.tag === tag
    )

    return {
      params: { tag },
      props: {
        posts: sortPostsByPubDate(
          fromCollectionToFrontmatters(filteredCollection)
        ),
      },
    }
  })
}

const { posts } = Astro.props as { posts: Frontmatter[] }
const { tag } = Astro.params as { tag: Tag }
---

<BaseLayout
  content={{
    title: `Tag: ${tag}`,
    description: `タグ「${tag}」の記事一覧`,
  }}
>
  <TagWithIcon tag={tag} />
  <PostPreviewList posts={posts} />
</BaseLayout>
