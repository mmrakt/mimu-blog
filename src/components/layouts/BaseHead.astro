---
import '@fontsource-variable/inter'
import { ViewTransitions } from 'astro:transitions'
import { SITE } from '$/config'
import '$/styles/global.css'

export type Props = {
  title: string
  description: string
  permalink?: string
}

const {
  title = SITE.title,
  description = SITE.description,
  permalink = SITE.url,
} = Astro.props
const ogpImageUrl = `${SITE.url}/images/ogp.png`
---

<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />

<title>{title}</title>
<meta name="title" content={title} />
{description && <meta name="description" content={description} />}
<ViewTransitions />

<link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
<link rel="icon" href="/images/favicon.png" />
<link rel="sitemap" href="/sitemap-index.xml" />
<link rel="mask-icon" href="/safari-pinned-tab.svg" color="#5bbad5" />

<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="msapplication-TileColor" content="#da532c" />
<meta name="msapplication-config" content="/browserconfig.xml" />
<meta name="theme-color" content="#ffffff" />

<!-- Open Graph Tags (Facebook) -->
<meta property="og:type" content="website" />
<meta property="og:title" content={title} />
{permalink && <meta property="og:url" content={permalink} />}
{description && <meta property="og:description" content={description} />}
<meta property="og:image" content={ogpImageUrl} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:title" content={title} />
{permalink && <meta property="twitter:url" content={permalink} />}
{description && <meta property="twitter:description" content={description} />}
<meta property="twitter:image" content={ogpImageUrl} />

<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme')
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark'
    }
    return 'light'
  })()

  if (theme === 'light') {
    document.documentElement.classList.remove('dark')
  } else {
    document.documentElement.classList.add('dark')
  }
</script>
<script>
  import customCursor from '../../utils/customCursor'
  customCursor()
</script>
