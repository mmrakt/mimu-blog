---
import type { CollectionEntry } from 'astro:content'
import MainLayout from '$/components/layouts/MainLayout.astro'
import BaseHead from '$/components/layouts/BaseHead.astro'
import Prose from '$/components/elements/Prose.astro'
import { ViewTransitions } from 'astro:transitions'
import TagList from '$/components/elements/TagList.astro'
import {
  calcTagCountByTagList,
  extractExcerptFromBody,
  formatPostDate,
} from '$/utils'
import PostIcon from '$/components/elements/postIcon.astro'

interface Props {
  entry: CollectionEntry<'owned'>
  enableTransition?: boolean
}
const { entry, enableTransition = false } = Astro.props
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead
      title={entry.data.title}
      description={await extractExcerptFromBody(entry.body)}
    />
    {enableTransition && <ViewTransitions />}
  </head>
  <MainLayout>
    {
      entry.data.tagList && entry.data.tagList[0] !== 'other' && (
        <PostIcon tag={entry.data.tagList[0]} link={entry.slug} />
      )
    }
    <div class="post__header">
      <div class="post__title-wrapper">
        <h1 class="post__title" transition:name={`title:${entry.slug}`}>
          {entry.data.title}
        </h1>
      </div>
      <p class="post__desc" transition:name={`date:${entry.slug}`}>
        <span class="post__date">
          {formatPostDate(entry.data.pubDate)}
        </span>
      </p>
      <div class="post__tag-list" transition:name={`tagList:${entry.slug}`}>
        {
          entry.data.tagList && (
            <TagList
              items={calcTagCountByTagList(entry.data.tagList)}
              textSize="base"
              postSlug={entry.slug}
            />
          )
        }
      </div>
    </div>
    <Prose>
      <slot />
    </Prose>
  </MainLayout>

  <style>
    .post__header {
      @apply py-4 mb-1 text-center md:text-left;
    }
    .post__title-wrapper {
      @apply flex justify-center;
    }
    .post__title {
      @apply text-4xl text-left font-extrabold text-theme-primary dark:text-theme-dark-primary mt-5;
    }
    .post__desc {
      @apply text-gray-500 dark:text-gray-100 flex justify-center text-left mt-2;
    }
    .post__tag-list {
      @apply flex justify-center;
    }
    .subscription-form {
      @apply w-4/6 mt-2 flex flex-row rounded-lg overflow-hidden shadow-lg;
    }
    .subscription-form input {
      @apply flex-grow border-0 text-theme-accent-gray-dark;
    }
    .subscription-form button,
    .button {
      @apply px-4 py-2 uppercase font-bold text-white bg-gradient-to-tr from-theme-primary to-theme-dark-secondary dark:from-theme-dark-secondary dark:to-theme-primary;
    }
    .author-card__follow-btn {
      @apply rounded-md shadow-md shadow-theme-dark-secondary dark:shadow-theme-primary hover:shadow-theme-secondary hover:dark:shadow-theme-secondary hover:shadow-lg transition-all;
    }
  </style>
</html>
